# Prometheus Alert Rules for Sample Application
# This file contains example alerting rules that would be deployed with Prometheus

apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: sample-app-alerts
  labels:
    app: sample-app
    prometheus: kube-prometheus
spec:
  groups:
  - name: sample-app.rules
    interval: 30s
    rules:
    
    # High Error Rate Alert
    - alert: SampleAppHighErrorRate
      expr: |
        (
          sum(rate(http_requests_total{app_kubernetes_io_name="sample-app",status=~"5.."}[5m]))
          /
          sum(rate(http_requests_total{app_kubernetes_io_name="sample-app"}[5m]))
        ) * 100 > 5
      for: 5m
      labels:
        severity: critical
        service: sample-app
      annotations:
        summary: "High error rate detected in sample-app"
        description: "Error rate is {{ $value }}% for sample-app in {{ $labels.namespace }} namespace"
        runbook_url: "https://github.com/your-org/sample-demo/blob/main/monitoring/runbooks/high-error-rate.md"
    
    # High Latency Alert
    - alert: SampleAppHighLatency
      expr: |
        histogram_quantile(0.95,
          sum(rate(http_request_duration_seconds_bucket{app_kubernetes_io_name="sample-app"}[5m]))
          by (le, namespace, pod)
        ) > 0.5
      for: 5m
      labels:
        severity: warning
        service: sample-app
      annotations:
        summary: "High latency detected in sample-app"
        description: "95th percentile latency is {{ $value }}s for sample-app in {{ $labels.namespace }} namespace"
        runbook_url: "https://github.com/your-org/sample-demo/blob/main/monitoring/runbooks/high-latency.md"
    
    # Pod Crash Loop Alert
    - alert: SampleAppPodCrashLoop
      expr: |
        rate(kube_pod_container_status_restarts_total{pod=~"sample-app-.*"}[15m]) > 0.1
      for: 5m
      labels:
        severity: warning
        service: sample-app
      annotations:
        summary: "Pod crash loop detected in sample-app"
        description: "Pod {{ $labels.pod }} in {{ $labels.namespace }} is crash looping"
        runbook_url: "https://github.com/your-org/sample-demo/blob/main/monitoring/runbooks/pod-crashloop.md"
    
    # Memory Usage Alert
    - alert: SampleAppHighMemoryUsage
      expr: |
        (
          container_memory_working_set_bytes{pod=~"sample-app-.*",container="sample-app"}
          /
          container_spec_memory_limit_bytes{pod=~"sample-app-.*",container="sample-app"}
        ) * 100 > 80
      for: 10m
      labels:
        severity: warning
        service: sample-app
      annotations:
        summary: "High memory usage in sample-app"
        description: "Memory usage is {{ $value }}% for pod {{ $labels.pod }} in {{ $labels.namespace }}"
        runbook_url: "https://github.com/your-org/sample-demo/blob/main/monitoring/runbooks/high-resource-usage.md"
    
    # CPU Throttling Alert
    - alert: SampleAppCPUThrottling
      expr: |
        rate(container_cpu_cfs_throttled_seconds_total{pod=~"sample-app-.*",container="sample-app"}[5m])
        /
        rate(container_cpu_cfs_periods_total{pod=~"sample-app-.*",container="sample-app"}[5m])
        > 0.25
      for: 10m
      labels:
        severity: warning
        service: sample-app
      annotations:
        summary: "CPU throttling detected in sample-app"
        description: "{{ $value | humanizePercentage }} of CPU periods are throttled for pod {{ $labels.pod }}"
        runbook_url: "https://github.com/your-org/sample-demo/blob/main/monitoring/runbooks/high-resource-usage.md"
    
    # Pod Not Ready Alert
    - alert: SampleAppPodNotReady
      expr: |
        kube_pod_status_ready{condition="false",pod=~"sample-app-.*"} == 1
      for: 5m
      labels:
        severity: warning
        service: sample-app
      annotations:
        summary: "Sample-app pod not ready"
        description: "Pod {{ $labels.pod }} in {{ $labels.namespace }} has been not ready for more than 5 minutes"
        runbook_url: "https://github.com/your-org/sample-demo/blob/main/monitoring/runbooks/pod-crashloop.md"
    
    # Deployment Replica Mismatch Alert
    - alert: SampleAppReplicaMismatch
      expr: |
        kube_deployment_spec_replicas{deployment="sample-app"}
        !=
        kube_deployment_status_replicas_available{deployment="sample-app"}
      for: 15m
      labels:
        severity: warning
        service: sample-app
      annotations:
        summary: "Sample-app deployment replica mismatch"
        description: "Deployment {{ $labels.deployment }} in {{ $labels.namespace }} has {{ $labels.spec_replicas }} desired but {{ $labels.available_replicas }} available replicas"
        runbook_url: "https://github.com/your-org/sample-demo/blob/main/monitoring/runbooks/deployment-issues.md"
    
    # HPA Max Replicas Reached Alert
    - alert: SampleAppHPAMaxReplicas
      expr: |
        kube_horizontalpodautoscaler_status_current_replicas{horizontalpodautoscaler="sample-app"}
        ==
        kube_horizontalpodautoscaler_spec_max_replicas{horizontalpodautoscaler="sample-app"}
      for: 15m
      labels:
        severity: warning
        service: sample-app
      annotations:
        summary: "Sample-app HPA at maximum replicas"
        description: "HPA {{ $labels.horizontalpodautoscaler }} in {{ $labels.namespace }} has reached maximum replicas ({{ $value }})"
        runbook_url: "https://github.com/your-org/sample-demo/blob/main/monitoring/runbooks/scaling-issues.md"
    
    # Ingress Certificate Expiry Alert
    - alert: SampleAppCertificateExpiry
      expr: |
        probe_ssl_earliest_cert_expiry{instance=~"https://.*sample-app.*"} - time() < 7 * 24 * 3600
      for: 1h
      labels:
        severity: warning
        service: sample-app
      annotations:
        summary: "Sample-app SSL certificate expiring soon"
        description: "SSL certificate for {{ $labels.instance }} expires in {{ $value | humanizeDuration }}"
        runbook_url: "https://github.com/your-org/sample-demo/blob/main/monitoring/runbooks/certificate-management.md"

---
# ServiceMonitor to scrape metrics from sample-app
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: sample-app-metrics
  labels:
    app: sample-app
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: sample-app
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s
  namespaceSelector:
    matchNames:
    - dev
    - stage
    - prod

---
# Example PodMonitor (alternative to ServiceMonitor)
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: sample-app-pod-metrics
  labels:
    app: sample-app
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: sample-app
  podMetricsEndpoints:
  - port: http
    path: /metrics
    interval: 30s
  namespaceSelector:
    matchNames:
    - dev
    - stage
    - prod

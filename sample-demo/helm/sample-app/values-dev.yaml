# Development Environment Values for sample-app Helm chart

# Environment-specific configuration
environment: dev

# Image configuration for development
image:
  repository: your-account.dkr.ecr.us-west-2.amazonaws.com/demo-app
  tag: "dev-latest"
  pullPolicy: Always

# Resource limits for development (lower requirements)
resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 50m
    memory: 64Mi

# Autoscaling for development (minimal scaling)
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 85

# Replica count when autoscaling is disabled
replicaCount: 1

# Environment variables for development
env:
  ENVIRONMENT: "development"
  LOG_LEVEL: "debug"
  PORT: "8000"
  HOST: "0.0.0.0"

# Secrets for development (non-sensitive values for demo)
secrets:
  DATABASE_URL: "postgresql://dev-user:dev-password@dev-db:5432/devdb"
  API_KEY: "dev-api-key-not-secret"

# ConfigMap for development
configMap:
  app.properties: |
    # Development Application properties
    app.name=sample-app
    app.debug=true
    app.environment=development
    
  logging.conf: |
    # Development Logging configuration
    version: 1
    disable_existing_loggers: false
    formatters:
      default:
        format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        level: DEBUG
        formatter: default
    root:
      level: DEBUG
      handlers: [console]

# Ingress configuration for development
ingress:
  enabled: true
  className: "aws-load-balancer-controller"
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/tags: Environment=dev,Project=demo
  hosts:
    - host: sample-app-dev.example.com
      paths:
        - path: /
          pathType: Prefix
  tls: []

# Health check configuration (more frequent for dev)
healthCheck:
  enabled: true
  livenessProbe:
    httpGet:
      path: /health/live
      port: 8000
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    httpGet:
      path: /health/ready
      port: 8000
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3

# Monitoring configuration
monitoring:
  enabled: true
  prometheus:
    enabled: true
    port: 8000
    path: /metrics
    scrapeInterval: 15s

# Pod annotations for development
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8000"
  prometheus.io/path: "/metrics"
  environment: "dev"

# Network policies (disabled for easier development)
networkPolicy:
  enabled: false

# Development-specific labels
commonLabels:
  environment: dev
  tier: development

# Development-specific annotations
commonAnnotations:
  deployed-by: "helm"
  environment: "development"
